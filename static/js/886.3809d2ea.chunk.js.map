{"version":3,"file":"static/js/886.3809d2ea.chunk.js","mappings":"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","sources":["components/GreedySnake/Food.js","components/GreedySnake/Snake.js","components/GreedySnake/GameStatus.js","components/GreedySnake/GreedySnake.js","webpack://portfolio-react/./src/components/GreedySnake/GreedySnake.module.scss?3766"],"sourcesContent":["// 食物组件\n\nimport styles from './GreedySnake.module.scss';\n\nfunction Food(props) {\n    const { left, top } = props.position;\n    return (\n        <div className={styles.food} style={{ left: left + 'px', top: top + 'px' }}>\n            {/* 添加四个小div 来设置食物的样式 */}\n            <div></div>\n            <div></div>\n            <div></div>\n            <div></div>\n        </div>\n    );\n}\n// export default class Food {\n//     element;\n\n//     constructor() {\n//       this.element = document.getElementById('food');\n//     }\n\n//     // 获取食物坐标\n//     get X() {\n//       return this.element.offsetLeft;\n//     }\n\n//     get Y() {\n//       return this.element.offsetTop;\n//     }\n\n//     // 随机修改食物位置，区间[0,290]，且必须是10的整数倍\n//     change() {\n//       // 生成随机位置\n//       let left = Math.round(Math.random() * 29) * 10;\n//       let top = Math.round(Math.random() * 29) * 10;\n\n//       this.element.style.left = left + 'px';\n//       this.element.style.top = top + 'px';\n//     }\n//   }\n\nexport default Food;\n","import styles from './GreedySnake.module.scss';\nexport default function Snake(props) {\n    const { data = [] } = props;\n    return (\n        <div className={styles.snake}>\n            {data.map(({ left, top }, index) => {\n                return (\n                    <div className={styles.snake_item} style={{ left: left + 'px', top: top + 'px' }} key={index}></div>\n                );\n            })}\n        </div>\n    );\n}\n","import styles from './GreedySnake.module.scss';\r\n\r\nexport default function GameStatus(props) {\r\n    if (props.status === 0) {\r\n        return <div className={styles.game_status}>按空格键开始游戏</div>;\r\n    } else if (props.status === 2) {\r\n        return <div className={styles.game_status}>游戏暂停</div>;\r\n    } else if (props.status === 3) {\r\n        return <div className={styles.game_status}>游戏结束</div>;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import { Component } from 'react';\nimport styles from './GreedySnake.module.scss';\nimport Food from './Food';\nimport Snake from './Snake';\nimport GameStatus from './GameStatus';\nimport _ from 'lodash';\n\nclass GreedySnake extends Component {\n    direction = 'ArrowRight'; // 移动方向，初始为向右移动\n    directionKeyCode = ['ArrowUp', 'ArrowLeft', 'ArrowRight', 'ArrowDown', 'KeyA', 'KeyS', 'KeyD', 'KeyW'];\n    speed = 300; // 移动速度\n    maxLevel = 10; // 最大等级\n    levelThreshold = 2; // 每升一级所需分数\n    timer = null;\n\n    constructor() {\n        super();\n\n        this.state = {\n            // 蛇体数据\n            snakeData: [\n                {\n                    left: 0,\n                    top: 0\n                }\n            ],\n            level: 1, // 当前等级\n            score: 0, // 当前分数\n            gameStatus: 0, // 游戏状态  0 初始状态， 1 进行中， 2 已暂停， 3 已结束\n            // 食物位置\n            foodPosition: {\n                left: '0px',\n                top: '0px'\n            }\n        };\n    }\n    componentDidMount() {\n        document.addEventListener('keydown', this.keydownHandler);\n        this.refreshFood();\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.keydownHandler);\n    }\n\n    // 键盘按键按下事件处理函数\n    keydownHandler = (event) => {\n        // 阻止按键默认行为\n        event.preventDefault();\n\n        // 获取按键code值\n        const { code } = event;\n        let { gameStatus } = this.state;\n\n        // 按键识别\n        const isDirectionKey = this.directionKeyCode.includes(code);\n        if (isDirectionKey && gameStatus === 1) {\n            // 方向切换\n            this.direction = code;\n        } else if (code === 'Space' && gameStatus !== 3) {\n            // 暂停/开始切换\n            gameStatus = gameStatus === 1 ? 2 : 1;\n            this.setState({ gameStatus }, () => {\n                if (this.state.gameStatus === 1) {\n                    this.move();\n                } else {\n                    clearTimeout(this.timer);\n                }\n            });\n        } else if (code === 'KeyR') {\n            // 复位操作\n            this.setState({\n                snakeData: [\n                    {\n                        left: 0,\n                        top: 0\n                    }\n                ],\n                level: 1,\n                score: 0,\n                gameStatus: 0\n            });\n            this.speed = 300;\n        }\n    };\n\n    // 蛇的移动\n    move = () => {\n        // 根据方向控制位置\n        switch (this.direction) {\n            case 'ArrowUp':\n            case 'KeyW':\n                this.updateSnakeData('top', -10);\n                break;\n            case 'ArrowDown':\n            case 'KeyS':\n                this.updateSnakeData('top', 10);\n\n                break;\n            case 'ArrowLeft':\n            case 'KeyA':\n                this.updateSnakeData('left', -10);\n                break;\n            case 'ArrowRight':\n            case 'KeyD':\n                this.updateSnakeData('left', 10);\n                break;\n            default:\n                break;\n        }\n    };\n\n    // 更新蛇体数据\n    updateSnakeData = (field, num) => {\n        const snakeData = _.cloneDeep(this.state.snakeData);\n        const len = snakeData.length;\n\n        // 对克隆出的数据进行操作\n        // 这样在确认数据没问题前，不会影响原始数据\n        if (len > 1) {\n            // 将后一节蛇体的位置设置为前一节蛇体的位置\n            for (let i = len - 1; i > 0; i--) {\n                // 获取前一节蛇体的位置\n                let top = snakeData[i - 1].top;\n                let left = snakeData[i - 1].left;\n\n                snakeData[i].left = left;\n                snakeData[i].top = top;\n            }\n            // 蛇头数据更新\n            snakeData[0][field] += num;\n        } else {\n            // 蛇头数据更新\n            snakeData[0][field] += num;\n        }\n\n        // 撞墙检测\n        if (snakeData[0].left < 0 || snakeData[0].top < 0 || snakeData[0].left > 290 || snakeData[0].top > 290) {\n            this.setState({\n                gameStatus: 3\n            });\n            clearTimeout(this.timer);\n            return;\n        }\n\n        // 头体相撞检测\n        for (let i = 1, len = snakeData.length; i < len; i++) {\n            let snakeBody = snakeData[i];\n            if (snakeData[0].top === snakeBody.top && snakeData[0].left === snakeBody.left) {\n                this.setState({\n                    gameStatus: 3\n                });\n                clearTimeout(this.timer);\n                return;\n            }\n        }\n\n        this.setState(\n            {\n                snakeData\n            },\n            () => {\n                // 食物检测\n                this.checkFood();\n                this.timer = setTimeout(this.move.bind(this), this.speed);\n            }\n        );\n    };\n\n    // 增加蛇体数据\n    addSnakeData = () => {\n        const snakeData = _.cloneDeep(this.state.snakeData);\n        const snakeTail = snakeData[snakeData.length - 1];\n        let newSnakeTail = {\n            top: snakeTail.top,\n            left: snakeTail.left\n        };\n\n        // 根据前进方向决定新数据的位置\n        switch (this.direction) {\n            case 'ArrowUp':\n            case 'KeyW':\n                newSnakeTail.top -= 10;\n                break;\n            case 'ArrowDown':\n            case 'KeyS':\n                newSnakeTail.top += 10;\n                break;\n            case 'ArrowLeft':\n            case 'KeyA':\n                newSnakeTail.left += 10;\n                break;\n            case 'ArrowRight':\n            case 'KeyD':\n                newSnakeTail.left -= 10;\n                break;\n            default:\n                break;\n        }\n        snakeData.push(newSnakeTail);\n        this.setState({\n            snakeData\n        });\n    };\n\n    // 食物检测\n    checkFood() {\n        const { foodPosition, snakeData } = this.state;\n        const snakeHead = snakeData[0];\n        if (snakeHead.top === foodPosition.top && snakeHead.left === foodPosition.left) {\n            // 增加分数\n            this.addScore();\n\n            // 刷新食物位置\n            this.refreshFood();\n\n            // 增加蛇的身体\n            this.addSnakeData();\n        }\n    }\n\n    // 增加分数及计算等级\n    addScore = () => {\n        let { score, level } = this.state;\n        score += 1;\n        let newLevel = level;\n        if (level < this.maxLevel) {\n            newLevel = Math.floor(score / this.levelThreshold) + 1;\n        }\n        // 计算移动速度\n        this.speed = 300 - (level - 1) * 30;\n        this.setState({\n            score,\n            level: newLevel\n        });\n    };\n\n    // 刷新食物\n    refreshFood = () => {\n        // 生成随机位置\n        let left = Math.round(Math.random() * 29) * 10;\n        let top = Math.round(Math.random() * 29) * 10;\n        this.setState({\n            foodPosition: {\n                left,\n                top\n            }\n        });\n    };\n\n    render() {\n        const { snakeData = [], score, level, foodPosition, gameStatus } = this.state;\n        return (\n            // 主容器\n            <div className={styles.main}>\n                {/* 游戏的舞台 */}\n                <div className={styles.stage}>\n                    {/* 游戏状态 */}\n                    <GameStatus status={gameStatus} />\n\n                    {/* 蛇 */}\n                    <Snake data={snakeData} />\n\n                    {/* 食物 */}\n                    <Food position={foodPosition} />\n                </div>\n\n                {/* 积分牌 */}\n                <div className={styles.scorePanel}>\n                    <div>Score:{score}</div>\n                    <div>Level:{level}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default GreedySnake;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"GreedySnake_main__v43kz\",\"stage\":\"GreedySnake_stage__k17Mh\",\"game_status\":\"GreedySnake_game_status__YqRuT\",\"snake_item\":\"GreedySnake_snake_item__ESUeZ\",\"food\":\"GreedySnake_food__4Ku2T\",\"scorePanel\":\"GreedySnake_scorePanel__R+mB-\",\"introduce_container\":\"GreedySnake_introduce_container__NtQgc\",\"title\":\"GreedySnake_title__6eaNV\",\"usage\":\"GreedySnake_usage__ag5fw\",\"label\":\"GreedySnake_label__93NsN\"};"],"names":["props","position","left","top","className","styles","style","Snake","data","map","index","GameStatus","status","GreedySnake","direction","directionKeyCode","speed","maxLevel","levelThreshold","timer","keydownHandler","event","preventDefault","code","gameStatus","state","includes","setState","move","clearTimeout","snakeData","level","score","updateSnakeData","field","num","_","len","length","i","snakeBody","checkFood","setTimeout","bind","addSnakeData","snakeTail","newSnakeTail","push","addScore","newLevel","Math","floor","refreshFood","round","random","foodPosition","document","addEventListener","this","removeEventListener","snakeHead","Component"],"sourceRoot":""}